server:
  port: 3000

spring:
  application:
    name: FSA Forest Client
  main:
    lazy-initialization: false
    banner-mode: "off"
    allow-bean-definition-overriding: true
  r2dbc:
    url: r2dbc:postgresql://${ca.bc.gov.nrs.postgres.host}/${ca.bc.gov.nrs.postgres.database}
    username: ${ca.bc.gov.nrs.postgres.username}
    password: ${ca.bc.gov.nrs.postgres.password}
    pool:
      enabled: true
      initialSize: 1
      minIdle: 1
      maxSize: 3
      maxLifeTime: 60000
      maxIdleTime: 45000
      maxCreateConnectionTime: 90000
      poolName: FsaClientConPool
  flyway:
    locations: classpath:db/migration
    enabled: true
    validate-on-migrate: true
    user: ${ca.bc.gov.nrs.postgres.username}
    password: ${ca.bc.gov.nrs.postgres.password}
    url: jdbc:postgresql://${ca.bc.gov.nrs.postgres.host}/${ca.bc.gov.nrs.postgres.database}

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      base-path: /
      exposure:
        include: "*"
  httpexchanges:
    recording:
      include: principal,request-headers,response-headers,cookie-headers,time-taken,authorization-header,remote-address,session-id

springdoc:
  webjars:
    prefix: /v3
  api-docs:
    groups:
      enabled: true
  show-actuator: false
  swagger-ui:
    path: /

frontend:
  url: ${FRONTEND_URL:*}


ca:
  bc:
    gov:
      nrs:
        ches:
          uri: ${CHES_API_URL:http://127.0.0.1:10010/chess/uri}
          tokenUrl: ${CHES_TOKEN_URL:http://127.0.0.1:10010/token/uri}
          clientId: ${CHES_CLIENT_ID:clientId}
          clientSecret: ${CHES_CLIENT_SECRET:secret}
          scope: scope
        orgbook:
          uri: https://orgbook.gov.bc.ca/api
        openmaps:
          uri: https://openmaps.gov.bc.ca/geo/pub/ows
        postgres:
          database: ${POSTGRESQL_DATABASE:fsa-forest}
          host: ${POSTGRESQL_HOST:localhost}:5432
          username: ${POSTGRESQL_USER:user}
          password: ${POSTGRESQL_PASSWORD:passwd}
