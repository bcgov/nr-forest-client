apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: ${NAME}-${ZONE}
  app.kubernetes.io/part-of: ${NAME}-${ZONE}
parameters:
  - name: NAME
    description: Product name
    value: nr-forest-client
  - name: COMPONENT
    description: Component name
    value: legacydb
  - name: ZONE
    description: Deployment zone, e.g. pr-### or prod
    required: true
  - name: IMAGE_TAG
    description: Image tag to use
    value: 23-faststart
  - name: PVC_MOUNT_PATH
    description: Where to mount the PVC, subpath (e.g. data/)
    value: /opt/oracle/oradata
  - name: DB_PVC_SIZE
    description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Database Volume Capacity
    required: true
    value: 256Mi
  - name: REGISTRY
    description: Container registry to import from (internal is image-registry.openshift-image-registry.svc:5000)
    value: ghcr.io
  - name: DB_PASSWORD
    description: Password for the OracleDB connection user.
    from: "[a-zA-Z0-9]{16}"
    generate: expression
objects:
  - kind: Secret
    apiVersion: v1    
    metadata:
      name: ${NAME}-${ZONE}
      labels:
        app: ${NAME}-${ZONE}
    stringData:      
      database-password: ${DB_PASSWORD}
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: ${NAME}-${ZONE}-${COMPONENT}
      labels:
        app: ${NAME}-${ZONE}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: ${DB_PVC_SIZE}
      storageClassName: netapp-file-standard
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: ${NAME}-${ZONE}-${COMPONENT}
      labels:
        app: ${NAME}-${ZONE}
    spec:
      replicas: 1
      selector:
        matchLabels:
          deployment: ${NAME}-${ZONE}-${COMPONENT}
      strategy:
        type: Recreate
        recreateParams:
          timeoutSeconds: 600
        activeDeadlineSeconds: 21600
      template:
        metadata:
          name: ${NAME}-${ZONE}-${COMPONENT}
          labels:
            app: ${NAME}-${ZONE}
            deployment: ${NAME}-${ZONE}-${COMPONENT}
        spec:
          containers:
            - name: ${NAME}
              image: gvenzl/oracle-free:23-faststart
              ports:
                - containerPort: 5432
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /usr/bin/env
                    - sh
                    - -c
                    - /opt/oracle/healthcheck.sh XE
                failureThreshold: 3
                initialDelaySeconds: 30
                periodSeconds: 15
                timeoutSeconds: 5
              livenessProbe:
                exec:
                  command:
                    - /usr/bin/env
                    - sh
                    - -c
                    - /opt/oracle/healthcheck.sh XE
                failureThreshold: 5
                initialDelaySeconds: 240
                periodSeconds: 15
                timeoutSeconds: 5
              env:
                - name: ORACLE_RANDOM_PASSWORD
                  value: "yes"
                # - name: APP_USER_PASSWORD
                #   valueFrom:
                #     secretKeyRef:
                #       name: ${NAME}-${ZONE}
                #       key: database-password
                - name: APP_USER_PASSWORD
                  value: "default"
                - name: APP_USER
                  value: "THE"
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: Always
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          schedulerName: default-scheduler
  - kind: Service
    apiVersion: v1    
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      ports:
        - name: oracledb
          nodePort: 0
          port: 1521
          protocol: TCP
          targetPort: 1521
      selector:
        deployment: ${NAME}-${ZONE}-${COMPONENT}
      sessionAffinity: None
      type: ClusterIP
