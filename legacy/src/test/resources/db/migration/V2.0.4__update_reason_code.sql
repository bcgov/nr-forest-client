MERGE INTO THE.CLIENT_UPDATE_REASON_CODE tgt
USING (
    SELECT 'UND' AS CLIENT_UPDATE_REASON_CODE,
           'Undefined Value' AS DESCRIPTION,
           TIMESTAMP '2025-03-20 00:00:00.0' AS EFFECTIVE_DATE,
           TIMESTAMP '9999-12-31 00:00:00.0' AS EXPIRY_DATE,
           TIMESTAMP '2025-03-20 00:00:00.0' AS UPDATE_TIMESTAMP
    FROM DUAL
) src
ON (tgt.CLIENT_UPDATE_REASON_CODE = src.CLIENT_UPDATE_REASON_CODE)
WHEN MATCHED THEN
    UPDATE SET
        tgt.DESCRIPTION = src.DESCRIPTION,
        tgt.EFFECTIVE_DATE = src.EFFECTIVE_DATE,
        tgt.EXPIRY_DATE = src.EXPIRY_DATE,
        tgt.UPDATE_TIMESTAMP = src.UPDATE_TIMESTAMP
WHEN NOT MATCHED THEN
    INSERT (CLIENT_UPDATE_REASON_CODE,DESCRIPTION,EFFECTIVE_DATE,EXPIRY_DATE,UPDATE_TIMESTAMP)
    VALUES (src.CLIENT_UPDATE_REASON_CODE, src.DESCRIPTION, src.EFFECTIVE_DATE, src.EXPIRY_DATE, src.UPDATE_TIMESTAMP);

MERGE INTO THE.CLIENT_ACTION_REASON_XREF tgt
USING (
    SELECT
	    'ACDC' AS CLIENT_UPDATE_ACTION_CODE,
	    'UND' AS CLIENT_UPDATE_REASON_CODE,
	    CLIENT_TYPE_CODE,
	    TIMESTAMP '2025-03-21 00:00:00.0' AS UPDATE_TIMESTAMP,
	    'CLIADMIN' AS UPDATE_USERID,
	    TIMESTAMP '2025-03-21 00:00:00.0' AS ADD_TIMESTAMP,
	    'CLIADMIN' AS ADD_USERID
    FROM CLIENT_TYPE_CODE
) src
ON (
    tgt.CLIENT_UPDATE_REASON_CODE = src.CLIENT_UPDATE_REASON_CODE
    AND
    tgt.CLIENT_UPDATE_ACTION_CODE = src.CLIENT_UPDATE_ACTION_CODE
    AND
    tgt.CLIENT_TYPE_CODE = src.CLIENT_TYPE_CODE
)
WHEN MATCHED THEN
    UPDATE SET
        tgt.UPDATE_TIMESTAMP = src.UPDATE_TIMESTAMP,
        tgt.UPDATE_USERID = src.UPDATE_USERID,
        tgt.ADD_TIMESTAMP = src.ADD_TIMESTAMP,
        tgt.ADD_USERID = src.ADD_USERID
WHEN NOT MATCHED THEN
    INSERT (CLIENT_UPDATE_ACTION_CODE, CLIENT_UPDATE_REASON_CODE, CLIENT_TYPE_CODE, UPDATE_TIMESTAMP, UPDATE_USERID, ADD_TIMESTAMP, ADD_USERID)
    VALUES (src.CLIENT_UPDATE_ACTION_CODE, src.CLIENT_UPDATE_REASON_CODE, src.CLIENT_TYPE_CODE, src.UPDATE_TIMESTAMP, src.UPDATE_USERID, src.ADD_TIMESTAMP, src.ADD_USERID);

MERGE INTO THE.CLIENT_ACTION_REASON_XREF tgt
USING (
    SELECT
	    'ADDR' AS CLIENT_UPDATE_ACTION_CODE,
	    'UND' AS CLIENT_UPDATE_REASON_CODE,
	    CLIENT_TYPE_CODE,
	    TIMESTAMP '2025-03-21 00:00:00.0' AS UPDATE_TIMESTAMP,
	    'CLIADMIN' AS UPDATE_USERID,
	    TIMESTAMP '2025-03-21 00:00:00.0' AS ADD_TIMESTAMP,
	    'CLIADMIN' AS ADD_USERID
    FROM CLIENT_TYPE_CODE
) src
ON (
    tgt.CLIENT_UPDATE_REASON_CODE = src.CLIENT_UPDATE_REASON_CODE
    AND
    tgt.CLIENT_UPDATE_ACTION_CODE = src.CLIENT_UPDATE_ACTION_CODE
    AND
    tgt.CLIENT_TYPE_CODE = src.CLIENT_TYPE_CODE
)
WHEN MATCHED THEN
    UPDATE SET
        tgt.UPDATE_TIMESTAMP = src.UPDATE_TIMESTAMP,
        tgt.UPDATE_USERID = src.UPDATE_USERID,
        tgt.ADD_TIMESTAMP = src.ADD_TIMESTAMP,
        tgt.ADD_USERID = src.ADD_USERID
WHEN NOT MATCHED THEN
    INSERT (CLIENT_UPDATE_ACTION_CODE, CLIENT_UPDATE_REASON_CODE, CLIENT_TYPE_CODE, UPDATE_TIMESTAMP, UPDATE_USERID, ADD_TIMESTAMP, ADD_USERID)
    VALUES (src.CLIENT_UPDATE_ACTION_CODE, src.CLIENT_UPDATE_REASON_CODE, src.CLIENT_TYPE_CODE, src.UPDATE_TIMESTAMP, src.UPDATE_USERID, src.ADD_TIMESTAMP, src.ADD_USERID);

MERGE INTO THE.CLIENT_ACTION_REASON_XREF tgt
USING (
    SELECT
	    'DAC' AS CLIENT_UPDATE_ACTION_CODE,
	    'UND' AS CLIENT_UPDATE_REASON_CODE,
	    CLIENT_TYPE_CODE,
	    TIMESTAMP '2025-03-21 00:00:00.0' AS UPDATE_TIMESTAMP,
	    'CLIADMIN' AS UPDATE_USERID,
	    TIMESTAMP '2025-03-21 00:00:00.0' AS ADD_TIMESTAMP,
	    'CLIADMIN' AS ADD_USERID
    FROM CLIENT_TYPE_CODE
) src
ON (
    tgt.CLIENT_UPDATE_REASON_CODE = src.CLIENT_UPDATE_REASON_CODE
    AND
    tgt.CLIENT_UPDATE_ACTION_CODE = src.CLIENT_UPDATE_ACTION_CODE
    AND
    tgt.CLIENT_TYPE_CODE = src.CLIENT_TYPE_CODE
)
WHEN MATCHED THEN
    UPDATE SET
        tgt.UPDATE_TIMESTAMP = src.UPDATE_TIMESTAMP,
        tgt.UPDATE_USERID = src.UPDATE_USERID,
        tgt.ADD_TIMESTAMP = src.ADD_TIMESTAMP,
        tgt.ADD_USERID = src.ADD_USERID
WHEN NOT MATCHED THEN
    INSERT (CLIENT_UPDATE_ACTION_CODE, CLIENT_UPDATE_REASON_CODE, CLIENT_TYPE_CODE, UPDATE_TIMESTAMP, UPDATE_USERID, ADD_TIMESTAMP, ADD_USERID)
    VALUES (src.CLIENT_UPDATE_ACTION_CODE, src.CLIENT_UPDATE_REASON_CODE, src.CLIENT_TYPE_CODE, src.UPDATE_TIMESTAMP, src.UPDATE_USERID, src.ADD_TIMESTAMP, src.ADD_USERID);

MERGE INTO THE.CLIENT_ACTION_REASON_XREF tgt
USING (
    SELECT
	    'ID' AS CLIENT_UPDATE_ACTION_CODE,
	    'UND' AS CLIENT_UPDATE_REASON_CODE,
	    CLIENT_TYPE_CODE,
	    TIMESTAMP '2025-03-21 00:00:00.0' AS UPDATE_TIMESTAMP,
	    'CLIADMIN' AS UPDATE_USERID,
	    TIMESTAMP '2025-03-21 00:00:00.0' AS ADD_TIMESTAMP,
	    'CLIADMIN' AS ADD_USERID
    FROM CLIENT_TYPE_CODE
) src
ON (
    tgt.CLIENT_UPDATE_REASON_CODE = src.CLIENT_UPDATE_REASON_CODE
    AND
    tgt.CLIENT_UPDATE_ACTION_CODE = src.CLIENT_UPDATE_ACTION_CODE
    AND
    tgt.CLIENT_TYPE_CODE = src.CLIENT_TYPE_CODE
)
WHEN MATCHED THEN
    UPDATE SET
        tgt.UPDATE_TIMESTAMP = src.UPDATE_TIMESTAMP,
        tgt.UPDATE_USERID = src.UPDATE_USERID,
        tgt.ADD_TIMESTAMP = src.ADD_TIMESTAMP,
        tgt.ADD_USERID = src.ADD_USERID
WHEN NOT MATCHED THEN
    INSERT (CLIENT_UPDATE_ACTION_CODE, CLIENT_UPDATE_REASON_CODE, CLIENT_TYPE_CODE, UPDATE_TIMESTAMP, UPDATE_USERID, ADD_TIMESTAMP, ADD_USERID)
    VALUES (src.CLIENT_UPDATE_ACTION_CODE, src.CLIENT_UPDATE_REASON_CODE, src.CLIENT_TYPE_CODE, src.UPDATE_TIMESTAMP, src.UPDATE_USERID, src.ADD_TIMESTAMP, src.ADD_USERID);

MERGE INTO THE.CLIENT_ACTION_REASON_XREF tgt
USING (
    SELECT
	    'NAME' AS CLIENT_UPDATE_ACTION_CODE,
	    'UND' AS CLIENT_UPDATE_REASON_CODE,
	    CLIENT_TYPE_CODE,
	    TIMESTAMP '2025-03-21 00:00:00.0' AS UPDATE_TIMESTAMP,
	    'CLIADMIN' AS UPDATE_USERID,
	    TIMESTAMP '2025-03-21 00:00:00.0' AS ADD_TIMESTAMP,
	    'CLIADMIN' AS ADD_USERID
    FROM CLIENT_TYPE_CODE
) src
ON (
    tgt.CLIENT_UPDATE_REASON_CODE = src.CLIENT_UPDATE_REASON_CODE
    AND
    tgt.CLIENT_UPDATE_ACTION_CODE = src.CLIENT_UPDATE_ACTION_CODE
    AND
    tgt.CLIENT_TYPE_CODE = src.CLIENT_TYPE_CODE
)
WHEN MATCHED THEN
    UPDATE SET
        tgt.UPDATE_TIMESTAMP = src.UPDATE_TIMESTAMP,
        tgt.UPDATE_USERID = src.UPDATE_USERID,
        tgt.ADD_TIMESTAMP = src.ADD_TIMESTAMP,
        tgt.ADD_USERID = src.ADD_USERID
WHEN NOT MATCHED THEN
    INSERT (CLIENT_UPDATE_ACTION_CODE, CLIENT_UPDATE_REASON_CODE, CLIENT_TYPE_CODE, UPDATE_TIMESTAMP, UPDATE_USERID, ADD_TIMESTAMP, ADD_USERID)
    VALUES (src.CLIENT_UPDATE_ACTION_CODE, src.CLIENT_UPDATE_REASON_CODE, src.CLIENT_TYPE_CODE, src.UPDATE_TIMESTAMP, src.UPDATE_USERID, src.ADD_TIMESTAMP, src.ADD_USERID);

MERGE INTO THE.CLIENT_ACTION_REASON_XREF tgt
USING (
    SELECT
	    'RACT' AS CLIENT_UPDATE_ACTION_CODE,
	    'UND' AS CLIENT_UPDATE_REASON_CODE,
	    CLIENT_TYPE_CODE,
	    TIMESTAMP '2025-03-21 00:00:00.0' AS UPDATE_TIMESTAMP,
	    'CLIADMIN' AS UPDATE_USERID,
	    TIMESTAMP '2025-03-21 00:00:00.0' AS ADD_TIMESTAMP,
	    'CLIADMIN' AS ADD_USERID
    FROM CLIENT_TYPE_CODE
) src
ON (
    tgt.CLIENT_UPDATE_REASON_CODE = src.CLIENT_UPDATE_REASON_CODE
    AND
    tgt.CLIENT_UPDATE_ACTION_CODE = src.CLIENT_UPDATE_ACTION_CODE
    AND
    tgt.CLIENT_TYPE_CODE = src.CLIENT_TYPE_CODE
)
WHEN MATCHED THEN
    UPDATE SET
        tgt.UPDATE_TIMESTAMP = src.UPDATE_TIMESTAMP,
        tgt.UPDATE_USERID = src.UPDATE_USERID,
        tgt.ADD_TIMESTAMP = src.ADD_TIMESTAMP,
        tgt.ADD_USERID = src.ADD_USERID
WHEN NOT MATCHED THEN
    INSERT (CLIENT_UPDATE_ACTION_CODE, CLIENT_UPDATE_REASON_CODE, CLIENT_TYPE_CODE, UPDATE_TIMESTAMP, UPDATE_USERID, ADD_TIMESTAMP, ADD_USERID)
    VALUES (src.CLIENT_UPDATE_ACTION_CODE, src.CLIENT_UPDATE_REASON_CODE, src.CLIENT_TYPE_CODE, src.UPDATE_TIMESTAMP, src.UPDATE_USERID, src.ADD_TIMESTAMP, src.ADD_USERID);

MERGE INTO THE.CLIENT_ACTION_REASON_XREF tgt
USING (
    SELECT
	    'SPN' AS CLIENT_UPDATE_ACTION_CODE,
	    'UND' AS CLIENT_UPDATE_REASON_CODE,
	    CLIENT_TYPE_CODE,
	    TIMESTAMP '2025-03-21 00:00:00.0' AS UPDATE_TIMESTAMP,
	    'CLIADMIN' AS UPDATE_USERID,
	    TIMESTAMP '2025-03-21 00:00:00.0' AS ADD_TIMESTAMP,
	    'CLIADMIN' AS ADD_USERID
    FROM CLIENT_TYPE_CODE
) src
ON (
    tgt.CLIENT_UPDATE_REASON_CODE = src.CLIENT_UPDATE_REASON_CODE
    AND
    tgt.CLIENT_UPDATE_ACTION_CODE = src.CLIENT_UPDATE_ACTION_CODE
    AND
    tgt.CLIENT_TYPE_CODE = src.CLIENT_TYPE_CODE
)
WHEN MATCHED THEN
    UPDATE SET
        tgt.UPDATE_TIMESTAMP = src.UPDATE_TIMESTAMP,
        tgt.UPDATE_USERID = src.UPDATE_USERID,
        tgt.ADD_TIMESTAMP = src.ADD_TIMESTAMP,
        tgt.ADD_USERID = src.ADD_USERID
WHEN NOT MATCHED THEN
    INSERT (CLIENT_UPDATE_ACTION_CODE, CLIENT_UPDATE_REASON_CODE, CLIENT_TYPE_CODE, UPDATE_TIMESTAMP, UPDATE_USERID, ADD_TIMESTAMP, ADD_USERID)
    VALUES (src.CLIENT_UPDATE_ACTION_CODE, src.CLIENT_UPDATE_REASON_CODE, src.CLIENT_TYPE_CODE, src.UPDATE_TIMESTAMP, src.UPDATE_USERID, src.ADD_TIMESTAMP, src.ADD_USERID);

MERGE INTO THE.CLIENT_ACTION_REASON_XREF tgt
USING (
    SELECT
	    'USPN' AS CLIENT_UPDATE_ACTION_CODE,
	    'UND' AS CLIENT_UPDATE_REASON_CODE,
	    CLIENT_TYPE_CODE,
	    TIMESTAMP '2025-03-21 00:00:00.0' AS UPDATE_TIMESTAMP,
	    'CLIADMIN' AS UPDATE_USERID,
	    TIMESTAMP '2025-03-21 00:00:00.0' AS ADD_TIMESTAMP,
	    'CLIADMIN' AS ADD_USERID
    FROM CLIENT_TYPE_CODE
) src
ON (
    tgt.CLIENT_UPDATE_REASON_CODE = src.CLIENT_UPDATE_REASON_CODE
    AND
    tgt.CLIENT_UPDATE_ACTION_CODE = src.CLIENT_UPDATE_ACTION_CODE
    AND
    tgt.CLIENT_TYPE_CODE = src.CLIENT_TYPE_CODE
)
WHEN MATCHED THEN
    UPDATE SET
        tgt.UPDATE_TIMESTAMP = src.UPDATE_TIMESTAMP,
        tgt.UPDATE_USERID = src.UPDATE_USERID,
        tgt.ADD_TIMESTAMP = src.ADD_TIMESTAMP,
        tgt.ADD_USERID = src.ADD_USERID
WHEN NOT MATCHED THEN
    INSERT (CLIENT_UPDATE_ACTION_CODE, CLIENT_UPDATE_REASON_CODE, CLIENT_TYPE_CODE, UPDATE_TIMESTAMP, UPDATE_USERID, ADD_TIMESTAMP, ADD_USERID)
    VALUES (src.CLIENT_UPDATE_ACTION_CODE, src.CLIENT_UPDATE_REASON_CODE, src.CLIENT_TYPE_CODE, src.UPDATE_TIMESTAMP, src.UPDATE_USERID, src.ADD_TIMESTAMP, src.ADD_USERID);

