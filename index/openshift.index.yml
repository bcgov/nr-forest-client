apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: ${NAME}-${ZONE}
  app.kubernetes.io/part-of: ${NAME}-${ZONE}
parameters:
  - name: NAME
    description: Product name
    value: nr-forest-client
  - name: COMPONENT
    description: Component name
    value: index
  - name: ZONE
    description: Deployment zone, e.g. pr-### or prod
    required: true
  - name: IMAGE_TAG
    description: Image tag to use
    value: latest
  - name: PVC_MOUNT_PATH
    description: Where to mount the PVC, subpath (e.g. data/)
    value: /usr/share/elasticsearch/data
  - name: IDX_PVC_SIZE
    description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Database Volume Capacity
    required: true
    value: 256Mi
  - name: IDX_BKP_PVC_SIZE
    description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Database Backup Volume Capacity
    required: true
    value: 256Mi
  - name: REGISTRY
    description: Container registry to import from (internal is image-registry.openshift-image-registry.svc:5000)
    value: ghcr.io  
  - name: PROMOTE
    description: Image (namespace/name:tag) to promote/import
    required: true
objects:
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}-${ZONE}-${COMPONENT}
      labels:
        app: ${NAME}-${ZONE}
    spec:
      replicas: 1
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}
            from:
              kind: ImageStreamTag
              name: ${NAME}-${ZONE}-${COMPONENT}:${IMAGE_TAG}
      selector:
        deploymentconfig: ${NAME}-${ZONE}-${COMPONENT}
      strategy:
        type: Recreate
        recreateParams:
          timeoutSeconds: 600
        activeDeadlineSeconds: 21600
      template:
        metadata:
          name: ${NAME}-${ZONE}-${COMPONENT}
          labels:
            app: ${NAME}-${ZONE}
            deploymentconfig: ${NAME}-${ZONE}-${COMPONENT}
        spec:
          volumes:
            - name: ${NAME}-${ZONE}-${COMPONENT}
              persistentVolumeClaim:
                claimName: ${NAME}-${ZONE}-${COMPONENT}
          containers:
            - name: ${NAME}
              image: ${NAME}-${ZONE}-${COMPONENT}:${IMAGE_TAG}
              ports:
                - containerPort: 9200
                  name: http
                  protocol: TCP
                - containerPort: 9300
                  name: transport
                  protocol: TCP
              readinessProbe:
                tcpSocket:
                  port: 9200
                initialDelaySeconds: 240
                periodSeconds: 30
                timeoutSeconds: 3
                successThreshold: 1
                failureThreshold: 10
              livenessProbe:
                tcpSocket:
                  port: 9200
                initialDelaySeconds: 240
                periodSeconds: 60
                timeoutSeconds: 5
                successThreshold: 1
                failureThreshold: 5
              env:
                - name: cluster.name
                  value: ${NAME}-${ZONE}
                - name: discovery.type
                  value: single-node                
              volumeMounts:
                - name: ${NAME}-${ZONE}-${COMPONENT}
                  mountPath: ${PVC_MOUNT_PATH}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: Always
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          schedulerName: default-scheduler
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      ports:
        - name: es-http
          nodePort: 0
          port: 9200
          protocol: TCP
          targetPort: 9200
        - name: es-transport
          nodePort: 0
          port: 9300
          protocol: TCP
          targetPort: 9300
      selector:
        deploymentconfig: ${NAME}-${ZONE}-${COMPONENT}
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      name: ${NAME}-${ZONE}-${COMPONENT}-backup
    spec:
      schedule: "0 0 * * *"
      jobTemplate:
        spec:
          template:
            spec:
              containers:
              - name: ${NAME}-${ZONE}-${COMPONENT}-backup
                image: busybox
                command:
                  - /bin/sh
                  - -c
                  - "tar czf /data/elasticsearch-$(date +%Y%m%d%H%M%S).tar.gz /usr/share/elasticsearch/data"
                volumeMounts:
                - name: ${NAME}-${ZONE}-${COMPONENT}
                  mountPath: /usr/share/elasticsearch/data
                - name: ${NAME}-${ZONE}-${COMPONENT}-backup
                  mountPath: /data
              restartPolicy: OnFailure
              volumes:
              - name: ${NAME}-${ZONE}-${COMPONENT}
                persistentVolumeClaim:
                  claimName: ${NAME}-${ZONE}-${COMPONENT}
              - name: ${NAME}-${ZONE}-${COMPONENT}-backup
                persistentVolumeClaim:
                  claimName: ${NAME}-${ZONE}-${COMPONENT}-backup

  