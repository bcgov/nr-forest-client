---
version: "3.8"

services:
  database:
    container_name: database
    environment:
      POSTGRES_USER: default
      POSTGRES_PASSWORD: default
      POSTGRES_DB: default
    hostname: database
    image: postgres:12
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./database/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - /pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      interval: 5s
      timeout: 10s
      retries: 10
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"

  backend:
    container_name: backend
    environment:
      NODE_ENV: development
      POSTGRESQL_HOST: database
      POSTGRESQL_USER: default
      POSTGRESQL_PASSWORD: default
      POSTGRESQL_DATABASE: default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    hostname: backend
    image: ghcr.io/bcgov/nr-forest-client/backend
    links:
      - database
    ports:
      - "3000:3000"
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"

  frontend:
    container_name: frontend
    environment:
      NODE_ENV: development
      VITE_BACKEND_URL: backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    hostname: frontend
    image: ghcr.io/bcgov/nr-forest-client/frontend
    links:
      - backend
    ports:
      - "8080:8080"
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"
