# Compose v3 ref: https://docs.docker.com/compose/compose-file/compose-file-v3/
---
version: "3.9"

x-var:
  - &POSTGRES_USER
    postgres
  - &POSTGRES_PASSWORD
    default
  - &POSTGRES_DATABASE
    postgres
  - &POSTGRES_HOST
    database

x-defaults: &defaults
  logging:
    driver: "json-file"
    options:
      max-size: 10m
      max-file: "3"

services:
  database:
    container_name: *POSTGRES_HOST
    environment:
      POSTGRES_USER: *POSTGRES_USER
      POSTGRES_PASSWORD: *POSTGRES_PASSWORD
      POSTGRES_DB: *POSTGRES_DATABASE
    image: postgres:15
    ports: [5432:5432]
    volumes: ["/pgdata"]
    healthcheck:
      test: ["CMD", "pg_isready", "-U", *POSTGRES_USER]
      interval: 5s
      timeout: 10s
      retries: 10
    <<: *defaults

  backend:
    container_name: backend
    image: maven:3.9.3-eclipse-temurin-17
    entrypoint: sh -c "cd /app && mvn -ntp spring-boot:run -Dspring-boot.run.jvmArguments='-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n'"
    environment:
      POSTGRESQL_HOST: *POSTGRES_HOST
      POSTGRESQL_USER: *POSTGRES_USER
      POSTGRESQL_PASSWORD: *POSTGRES_PASSWORD
      POSTGRESQL_DATABASE: *POSTGRES_DATABASE
      CHES_CLIENT_ID: id    
      CHES_CLIENT_SECRET: secret
      CHES_TOKEN_URL: https://dev.loginproxy.gov.bc.ca/auth/realms/comsvcauth/protocol/openid-connect/token
      CHES_API_URL: https://ches-dev.api.gov.bc.ca/api/v1
      ENV LANG: en_CA.UTF-8
      LANGUAGE: en_CA.UTF-8
      LC_ALL: en_CA.UTF-8
    ports: [3000:3000]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on: [*POSTGRES_HOST]
    volumes: ["./backend:/app"]
    <<: *defaults

  frontend:
    container_name: frontend
    image: node:18-bullseye
    entrypoint: sh -c "cd /app && npm i && npm start"
    environment:
      NODE_ENV: development
      VITE_BACKEND_URL: backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on: [backend]
    ports: [8080:8080]
    volumes: ["./frontend:/app", "/app/node_modules"]
    <<: *defaults

  legacydb:
    container_name: oracle
    environment:
      APP_USER_PASSWORD: default
      APP_USER: THE
      ORACLE_RANDOM_PASSWORD: yes
    platform: "linux/amd64"
    image: gvenzl/oracle-xe:21.3.0-slim-faststart
    ports: [1521:1521]
    volumes: [/opt/oracle/oradata gvenzl/oracle-xe]
    healthcheck:
      test: [ "CMD-SHELL", "healthcheck.sh" ]
      interval: 5s
      timeout: 10s
      retries: 10
    <<: *defaults
