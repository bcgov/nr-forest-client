version: "3.9"

x-var:
  - &POSTGRES_USER
    postgres
  - &POSTGRES_PASSWORD
    default
  - &POSTGRES_DATABASE
    postgres
  - &POSTGRES_HOST
    database

services:
  database:
    container_name: *POSTGRES_HOST
    environment:
      POSTGRES_USER: *POSTGRES_USER
      POSTGRES_PASSWORD: *POSTGRES_PASSWORD
      POSTGRES_DB: *POSTGRES_DATABASE
    hostname: database
    image: postgres:15
    ports: [5432:5432]
    restart: always    
    volumes:
      - ./database/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - /pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      interval: 5s
      timeout: 10s
      retries: 10
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"

  backend:
    container_name: backend
    environment:
      POSTGRESQL_HOST: *POSTGRES_HOST
      POSTGRESQL_USER: *POSTGRES_USER
      POSTGRESQL_PASSWORD: *POSTGRES_PASSWORD
      POSTGRESQL_DATABASE: *POSTGRES_DATABASE
      CHES_CLIENT_ID: id    
      CHES_CLIENT_SECRET: secret
      CHES_TOKEN_URL: https://dev.loginproxy.gov.bc.ca/auth/realms/comsvcauth/protocol/openid-connect/token
      CHES_API_URL: https://ches-dev.api.gov.bc.ca/api/v1
    ports: [3000:3000]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 10s
    hostname: backend
    image: ghcr.io/bcgov/nr-forest-client/backend:517
    depends_on:
      - *POSTGRES_HOST
    links:
      - *POSTGRES_HOST
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"

  frontend:
    container_name: frontend
    environment:
      NODE_ENV: development
      VITE_BACKEND_URL: backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    hostname: frontend
    image: ghcr.io/bcgov/nr-forest-client/frontend:500
    links:
      - backend
    ports: [8080:8080]
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"

  legacydb:
    container_name: oracle
    environment:
      APP_USER_PASSWORD: default
      APP_USER: THE
      ORACLE_RANDOM_PASSWORD: yes
    hostname: legacydb
    platform: "linux/amd64"
    image: gvenzl/oracle-xe:21.3.0-slim-faststart
    ports: [1521:1521]
    restart: always
    volumes:
      - oracle:/opt/oracle/oradata gvenzl/oracle-xe
    healthcheck:
      test: [ "CMD-SHELL", "healthcheck.sh" ]
      interval: 5s
      timeout: 10s
      retries: 10
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"

volumes:
  oracle: {}
