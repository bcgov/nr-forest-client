name: Reusable Unit Tests and Analysis

on:
  workflow_call:

jobs:
  vars:
    name: Set Variables
    outputs:
      user: ${{ steps.data.outputs.user }}
      pass: ${{ steps.data.outputs.pass }}
    runs-on: ubuntu-22.04
    timeout-minutes: 1
    steps:
      - name: Generate random username and password
        id: data
        run: |          
          USERNAME="user$(shuf -i 1000-9999 -n 1)"
          PASSWORD=$(openssl rand -base64 12)

          echo "user=$USERNAME" >> $GITHUB_OUTPUT
          echo "pass=$PASSWORD" >> $GITHUB_OUTPUT

  schemaspy:
    name: Generate SchemaSpy Documentation
    runs-on: ubuntu-22.04
    needs: [vars]
    services:
      postgres:
        image: postgis/postgis:16-3.4
        env:
          POSTGRES_DB: default
          POSTGRES_USER: ${{ needs.vars.outputs.user }}
          POSTGRES_PASSWORD: ${{ needs.vars.outputs.pass }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Flyway
        uses: docker://flyway/flyway:10
        env:
          FLYWAY_URL: jdbc:postgresql://postgres:5432/default
          FLYWAY_USER: ${{ needs.vars.outputs.user }}
          FLYWAY_PASSWORD: ${{ needs.vars.outputs.pass }}
          FLYWAY_LOCATIONS: filesystem:./backend/src/main/resources/db/migration
          FLYWAY_DEFAULT_SCHEMA: "nrfc"
        with:
          args: info migrate info

      - name: Create Output Folder
        run: |
          mkdir output
          chmod a+rwx -R output
      - name: Run Schemaspy
        run: docker run --network host -v "$PWD/output:/output" schemaspy/schemaspy:6.2.4 -t pgsql11 -db default -host 127.0.0.1 -port 5432 -u ${{ needs.vars.outputs.user }} -p ${{ needs.vars.outputs.pass }} -schemas nrfc
      - name: Deploy to Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: output
          target-folder: schemaspy