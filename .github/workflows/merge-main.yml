name: Merge to Main

on:
  push:
    branches:
      - main
    paths-ignore:
      - ".github/ISSUE_TEMPLATE/*"
      - "**.md"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  codeql:
    name: Semantic Code Analysis
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize
        uses: github/codeql-action/init@v2
        with:
          languages: javascript,java

      # Autobuild failed for Java, so building manually
      - name: Set up JDK 17 and Caching maven dependencies
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"

      - name: Build for Java
        run: |
          cd backend
          ./mvnw clean package

      - name: Build for Java
        run: |
          cd legacy
          ./mvnw clean package

      - name: Build for Node
        run: |
          cd frontend
          npm ci
          npm run build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  test-init:
    name: TEST Init
    needs:
      - codeql
    env:
      ZONE: test
    environment: test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.1
        with:
          file: common/openshift.init.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: false
          parameters: -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}

  test-database:
    name: TEST Database
    needs:
      - codeql
    env:
      ZONE: test
    environment: test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.1
        with:
          file: database/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: false
          penetration_test: false
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/database:${{ env.ZONE }}
  test-backend:
    name: TEST Backend
    needs:
      - codeql
    env:
      ZONE: test
    environment: test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.1
        with:
          file: backend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          verification_path: health
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/backend:${{ env.ZONE }}
            -p CHES_CLIENT_ID=${{ secrets.CHES_CLIENT_ID }}
            -p CHES_CLIENT_SECRET=${{ secrets.CHES_CLIENT_SECRET }}
            -p CHES_TOKEN_URL='https://test.loginproxy.gov.bc.ca/auth/realms/comsvcauth/protocol/openid-connect/token'
            -p CHES_API_URL='https://ches-test.api.gov.bc.ca/api/v1'

  test-legacy:
    name: TEST Legacy
    needs:
      - codeql
    env:
      ZONE: test
      DOMAIN: apps.silver.devops.gov.bc.ca
    environment: test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.4.3
        with:
          url: https://vault-iit.apps.silver.devops.gov.bc.ca
          token: ${{ secrets.VAULT_TOKEN }}
          exportEnv: 'false'
          secrets: |
            apps/data/test/client/app-client/db_proxy_read_only db_username | VAULT_DB_USER;
            apps/data/test/client/app-client/db_proxy_read_only db_password | VAULT_DB_PASS;
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.1
        with:
          file: legacy/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          verification_path: health
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/legacy:${{ env.ZONE }}
            -p ORACLEDB_USER=${{ steps.secrets.outputs.VAULT_DB_USER }}
            -p ORACLEDB_PASSWORD=${{ steps.secrets.outputs.VAULT_DB_PASS }}
            -p ORACLEDB_DATABASE=${{ secrets.ORACLEDB_DATABASE }}
            -p ORACLEDB_HOST=${{ secrets.ORACLEDB_HOST }}
            -p ORACLEDB_SERVICENAME=${{ secrets.ORACLEDB_SERVICENAME }}
            -p FOREST_API_URL=https://${{ github.event.repository.name }}-${{ env.ZONE }}-backend.${{ env.DOMAIN }}

  test-frontend:
    name: TEST Frontend
    needs:
      - codeql
    env:
      ZONE: test
    environment: test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.1
        with:
          file: frontend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/frontend:${{ env.ZONE }}
            -p VITE_KEYCLOAK_URL=https://test.loginproxy.gov.bc.ca/auth
            -p VITE_KEYCLOAK_CLIENT_ID=${{ secrets.KEYCLOAK_CLIENT_ID }}

  prod-database:
    name: PROD Database
    needs:
      - test-init
      - test-database
      - test-backend
      - test-frontend
      - test-legacy
    env:
      PREV: test
      ZONE: prod
    environment: prod
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.1
        with:
          file: database/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: false
          penetration_test: false
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/database:${{ env.PREV }}

  prod-init:
    name: PROD Init
    needs:
      - test-init
      - test-database
      - test-backend
      - test-frontend
      - test-legacy
    env:
      ZONE: prod
    environment: prod
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.1
        with:
          file: common/openshift.init.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: false
          parameters: -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}

  prod-backend:
    name: PROD Backend
    needs:
      - test-init
      - test-database
      - test-backend
      - test-frontend
      - test-legacy
    env:
      PREV: test
      ZONE: prod
    environment: prod
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.1
        with:
          file: backend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          verification_path: health
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/backend:${{ env.PREV }}
            -p CHES_CLIENT_ID=${{ secrets.CHES_CLIENT_ID }}
            -p CHES_CLIENT_SECRET=${{ secrets.CHES_CLIENT_SECRET }}
            -p CHES_TOKEN_URL='https://loginproxy.gov.bc.ca/auth/realms/comsvcauth/protocol/openid-connect/token'
            -p CHES_API_URL='https://ches.api.gov.bc.ca/api/v1'

  prod-legacy:
    name: PROD Backend
    needs:
      - test-init
      - test-database
      - test-backend
      - test-frontend
      - test-legacy
    env:
      PREV: test
      ZONE: prod
      DOMAIN: apps.silver.devops.gov.bc.ca
    environment: prod
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.4.3
        with:
          url: https://vault-iit.apps.silver.devops.gov.bc.ca
          token: ${{ secrets.VAULT_TOKEN }}
          exportEnv: 'false'
          secrets: |
            apps/data/prod/client/app-client/db_proxy_read_only db_username | VAULT_DB_USER;
            apps/data/prod/client/app-client/db_proxy_read_only db_password | VAULT_DB_PASS;
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.1
        with:
          file: backend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          verification_path: health
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/legacy:${{ env.PREV }}
            -p ORACLEDB_USER=${{ steps.secrets.outputs.VAULT_DB_USER }}
            -p ORACLEDB_PASSWORD=${{ steps.secrets.outputs.VAULT_DB_PASS }}
            -p ORACLEDB_DATABASE=${{ secrets.ORACLEDB_DATABASE }}
            -p ORACLEDB_HOST=${{ secrets.ORACLEDB_HOST }}
            -p ORACLEDB_SERVICENAME=${{ secrets.ORACLEDB_SERVICENAME }}
            -p FOREST_API_URL=https://${{ github.event.repository.name }}-${{ env.ZONE }}-backend.${{ env.DOMAIN }}

  prod-frontend:
    name: PROD Frontend
    needs:
      - test-init
      - test-database
      - test-backend
      - test-frontend
      - test-legacy
    env:
      PREV: test
      ZONE: prod
    environment: prod
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.1
        with:
          file: frontend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/frontend:${{ env.PREV }}
            -p VITE_KEYCLOAK_URL=https://loginproxy.gov.bc.ca/auth
            -p VITE_KEYCLOAK_CLIENT_ID=${{ secrets.KEYCLOAK_CLIENT_ID }}

  image-promotions:
    name: Promote images to PROD
    needs:
      - prod-init
      - prod-database
      - prod-backend
      - prod-frontend
      - prod-legacy
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        component: [backend, frontend, legacy]
    steps:
      - uses: shrink/actions-docker-registry-tag@v3
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.component }}
          target: test
          tags: prod
