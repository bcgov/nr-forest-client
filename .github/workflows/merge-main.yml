name: Merge to Main

on:
  pull_request:
  # push:
  #   branches:
  #     - main
  #   paths-ignore:
  #     - ".github/ISSUE_TEMPLATE/*"
  #     - "**.md"
  # workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  # https://github.com/marketplace/actions/ghcr-io-container-cleanup
  cleanup-ghcr:
    name: Cleanup Container Registry
    runs-on: ubuntu-22.04
    steps:
      - name: Delete old packages
        uses: davahome/ghcr-cleanup@v1.1.0.1
        with:
          delete_untagged: 1
          keep_versions: 10
          keep_versions_untagged: 0
          minimum_days: 14
          owner: orgs/bcgov
          package: ${{ github.event.repository.name }}
          skip_tags: prod-frontend,prod-backend
          token: ${{ secrets.GHCR_TOKEN }}

  codeql:
    name: Semantic Code Analysis
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize
        uses: github/codeql-action/init@v2
        with:
          languages: javascript,java

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  test-database:
    name: TEST Database
    needs:
      - codeql
    env:
      ZONE: test
    environment: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v0.1.0
        with:
          file: database/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: false
          penetration_test: false
          parameters: -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}

  test-backend:
    name: TEST Backend
    needs:
      - codeql
    env:
      ZONE: test
    environment: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v0.1.0
        with:
          file: backend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/backend:${{ env.ZONE }}
            -p NODE_ENV='development'
            -p API_URL='https://nrfc-api-test.api.gov.bc.ca'
            -p X_API_KEY=${{ secrets.GWA_X_API_KEY }}
            -p CHES_CLIENT_ID=${{ secrets.CHES_CLIENT_ID }}
            -p CHES_CLIENT_SECRET=${{ secrets.CHES_CLIENT_SECRET }}
            -p CHES_TOKEN_URL='https://test.loginproxy.gov.bc.ca/auth/realms/comsvcauth/protocol/openid-connect/token'
            -p CHES_API_URL='https://ches-test.api.gov.bc.ca/api/v1'
            -p ORACLEDB_USER=${{ secrets.ORACLEDB_USER }}
            -p ORACLEDB_PASSWORD=${{ secrets.ORACLEDB_PASSWORD }}
            -p ORACLEDB_DATABASE=${{ secrets.ORACLEDB_DATABASE }}
            -p ORACLEDB_HOST=${{ secrets.ORACLEDB_HOST }}
            -p ORACLEDB_SERVICENAME=${{ secrets.ORACLEDB_SERVICENAME }}

  test-frontend:
    name: TEST Frontend
    needs:
      - codeql
    env:
      ZONE: test
    environment: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v0.1.0
        with:
          file: frontend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/frontend:${{ env.ZONE }}

  prod-database:
    name: PROD Database
    needs:
      - test-database
      - test-backend
      - test-frontend
    env:
      ZONE: prod
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v0.1.0
        with:
          file: database/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: false
          penetration_test: false
          parameters: -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}

  prod-backend:
    name: PROD Backend
    needs:
      - test-database
      - test-backend
      - test-frontend
    env:
      ZONE: prod
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v0.1.0
        with:
          file: backend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/backend:${{ env.ZONE }}
            -p NODE_ENV='production'
            -p API_URL='https://nrfc-api-prod.api.gov.bc.ca'
            -p X_API_KEY=${{ secrets.GWA_X_API_KEY }}
            -p CHES_CLIENT_ID=${{ secrets.CHES_CLIENT_ID }}
            -p CHES_CLIENT_SECRET=${{ secrets.CHES_CLIENT_SECRET }}
            -p CHES_TOKEN_URL='https://loginproxy.gov.bc.ca/auth/realms/comsvcauth/protocol/openid-connect/token' \
            -p CHES_API_URL='https://ches.api.gov.bc.ca/api/v1'
            -p ORACLEDB_USER=${{ secrets.ORACLEDB_USER }}
            -p ORACLEDB_PASSWORD=${{ secrets.ORACLEDB_PASSWORD }}
            -p ORACLEDB_DATABASE=${{ secrets.ORACLEDB_DATABASE }}
            -p ORACLEDB_HOST=${{ secrets.ORACLEDB_HOST }}
            -p ORACLEDB_SERVICENAME=${{ secrets.ORACLEDB_SERVICENAME }}

  prod-frontend:
    name: PROD Frontend
    needs:
      - test-database
      - test-backend
      - test-frontend
    env:
      ZONE: prod
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v0.1.0
        with:
          file: frontend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/frontend:${{ env.ZONE }}

  image-promotions:
    name: Promote images to PROD
    needs:
      - prod-database
      - prod-backend
      - prod-frontend
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        component: [database, backend, frontend]
    steps:
      - uses: shrink/actions-docker-registry-tag@v3
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.component }}
          target: test
          tags: prod
