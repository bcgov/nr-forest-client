name: Merge to Main

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/ISSUE_TEMPLATE/*'
      - '**.md'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  tests-java:
    name: Backend Integrated Tests
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-22.04
    steps:
      - uses: bcgov-nr/action-test-and-analyse-java@v0.1.0
        name: Backend Coverage
        with:
          commands: |
            mvn -B verify -P all-tests checkstyle:checkstyle -Dcheckstyle.skip=false --file pom.xml
          dir: backend
          java-cache: maven
          java-distribution: temurin
          java-version: "17"
          sonar_args: >
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.projectKey=forest-client-backend
          sonar_project_token: ${{ secrets.SONAR_TOKEN_BACKEND }}
      - uses: bcgov-nr/action-test-and-analyse-java@v0.1.0
        name: Legacy Coverage
        with:
          commands: |
            mvn -B verify -P all-tests checkstyle:checkstyle -Dcheckstyle.skip=false --file pom.xml
          dir: legacy
          java-cache: maven
          java-distribution: temurin
          java-version: "17"
          sonar_args: >
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.projectKey=forest-client-legacy
          sonar_project_token: ${{ secrets.SONAR_TOKEN_LEGACY }}
      - uses: bcgov-nr/action-test-and-analyse-java@v0.1.0
        name: Processor Coverage
        with:
          commands: |
            mvn -B verify -P all-tests checkstyle:checkstyle -Dcheckstyle.skip=false --file pom.xml
          dir: processor
          java-cache: maven
          java-distribution: temurin
          java-version: "17"
          sonar_args: >
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.projectKey=nr-forest-client_processor
          sonar_project_token: ${{ secrets.SONAR_TOKEN_PROCESSOR }}

  tests-frontend:
    name: Frontend Unit Tests
    runs-on: ubuntu-22.04
    steps:
      - uses: bcgov-nr/action-test-and-analyse@v0.0.1
        with:
          commands: |
            npm ci
            npm run test
          dir: frontend
          sonar_args: >
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.exclusions=**/coverage/**/*,**/dist/**/*,**/examples/**/*,**/pages/**/*,**/tests/**/*
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.projectKey=forest-client-frontend
          sonar_project_token: ${{ secrets.SONAR_TOKEN_FRONTEND }}

  codeql:
    name: Semantic Code Analysis
    runs-on: ubuntu-22.04
    needs:
      - tests-java
      - tests-frontend
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize
        uses: github/codeql-action/init@v2
        with:
          languages: javascript,java

      # Autobuild failed for Java, so building manually
      - name: Set up JDK 17 and Caching maven dependencies
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build Backend
        run: |
          cd backend
          ./mvnw clean package

      - name: Build Legacy
        run: |
          cd legacy
          ./mvnw clean package

      - name: Build Frontend
        run: |
          cd frontend
          npm ci
          npm run build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  test-init:
    name: TEST Init
    needs:
      - codeql
    env:
      ZONE: test
      DOMAIN: apps.silver.devops.gov.bc.ca
      BROKER_URL: https://nr-broker.apps.silver.devops.gov.bc.ca
      VAULT_ADDR: https://vault-iit.apps.silver.devops.gov.bc.ca
    environment: test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Broker
        id: broker
        uses: bcgov-nr/action-vault-broker-approle@v0.0.5
        with:
          broker_jwt: ${{ secrets.BROKER_JWT }}
          provision_role_id: ${{ secrets.PROVISION_ROLE_ID }}
          project_name: client
          app_name: app-client
          environment: test
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          url: https://vault-iit.apps.silver.devops.gov.bc.ca
          token: ${{ steps.broker.outputs.vault_token }}
          exportEnv: 'false'
          secrets: |
            apps/data/test/client/app-client/db_proxy_read_only db_username | VAULT_DB_USER;
            apps/data/test/client/app-client/db_proxy_read_only db_password | VAULT_DB_PASS;
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: common/openshift.init.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: false
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p ORACLEDB_USER=${{ steps.secrets.outputs.VAULT_DB_USER }}
            -p ORACLEDB_PASSWORD=${{ steps.secrets.outputs.VAULT_DB_PASS }}
            -p ORACLEDB_DATABASE=${{ secrets.ORACLEDB_DATABASE }}
            -p ORACLEDB_HOST=${{ secrets.ORACLEDB_HOST }}
            -p ORACLEDB_SERVICENAME=${{ secrets.ORACLEDB_SERVICENAME }}
            -p ORACLEDB_SECRET=${{ secrets.ORACLEDB_SECRET }}
            -p BCREGISTRY_KEY='${{ secrets.BCREGISTRY_KEY }}'
            -p BCREGISTRY_ACCOUNT='${{ secrets.BCREGISTRY_ACCOUNT }}'
            -p CHES_CLIENT_ID=${{ secrets.CHES_CLIENT_ID }}
            -p CHES_CLIENT_SECRET=${{ secrets.CHES_CLIENT_SECRET }}

      - name: Conventional Changelog Update
        uses: TriPSs/conventional-changelog-action@v3
        id: changelog
        continue-on-error: true
        with:
          github-token: ${{ github.token }}
          output-file: 'CHANGELOG.md'
          skip-version-file: 'true'
          skip-commit: 'true'
          git-push: 'true'

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: ${{ steps.changelog.outputs.tag != '' }}
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          token: ${{ github.token }}
          tag_name: ${{ steps.changelog.outputs.tag }}
          name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}

  test-deploy:
    name: TEST Deployment
    needs:
      - test-init
    env:
      ZONE: test
      DOMAIN: apps.silver.devops.gov.bc.ca
    environment: test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Deploy Database
        uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: database/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: false
          penetration_test: false
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/database:${{ env.ZONE }}

      - name: Deploy Backend
        uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: backend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          verification_path: health
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/backend:${{ env.ZONE }}
            -p CHES_TOKEN_URL='https://test.loginproxy.gov.bc.ca/auth/realms/comsvcauth/protocol/openid-connect/token'
            -p CHES_API_URL='https://ches-test.api.gov.bc.ca/api/v1'
            -p BCREGISTRY_URI='https://bcregistry-prod.apigee.net'

      - name: Deploy Legacy
        uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: legacy/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          verification_path: health
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/legacy:${{ env.ZONE }}

      - name: Deploy Frontend
        uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: frontend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/frontend:${{ env.ZONE }}
            -p VITE_KEYCLOAK_URL=https://test.loginproxy.gov.bc.ca/auth
            -p VITE_KEYCLOAK_CLIENT_ID=${{ secrets.KEYCLOAK_CLIENT_ID }}

      - name: Deploy Processor
        uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: processor/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          verification_path: health
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/processor:${{ env.ZONE }}

  image-promotions:
    name: Promote images to PROD
    needs:
      - test-deploy
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        component: [backend, frontend, legacy, database, common, processor]
    steps:
      - uses: shrink/actions-docker-registry-tag@v3
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.component }}
          target: test
          tags: prod

  prod-init:
    name: PROD Init
    needs:
      - image-promotions
    env:
      ZONE: prod
      DOMAIN: apps.silver.devops.gov.bc.ca
      BROKER_URL: https://nr-broker.apps.silver.devops.gov.bc.ca
      VAULT_ADDR: https://vault-iit.apps.silver.devops.gov.bc.ca
    environment: prod
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Broker
        id: broker
        uses: bcgov-nr/action-vault-broker-approle@v0.0.5
        with:
          broker_jwt: ${{ secrets.BROKER_JWT }}
          provision_role_id: ${{ secrets.PROVISION_ROLE_ID }}
          project_name: client
          app_name: app-client
          environment: production
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          url: https://vault-iit.apps.silver.devops.gov.bc.ca
          token: ${{ steps.broker.outputs.vault_token }}
          exportEnv: 'false'
          secrets: |
            apps/data/prod/client/app-client/db_proxy_read_only db_username | VAULT_DB_USER;
            apps/data/prod/client/app-client/db_proxy_read_only db_password | VAULT_DB_PASS;
      - name: Deploys
        uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: common/openshift.init.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: false
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p ORACLEDB_USER=${{ steps.secrets.outputs.VAULT_DB_USER }}
            -p ORACLEDB_PASSWORD=${{ steps.secrets.outputs.VAULT_DB_PASS }}
            -p ORACLEDB_DATABASE=${{ secrets.ORACLEDB_DATABASE }}
            -p ORACLEDB_HOST=${{ secrets.ORACLEDB_HOST }}
            -p ORACLEDB_SERVICENAME=${{ secrets.ORACLEDB_SERVICENAME }}
            -p ORACLEDB_SECRET=${{ secrets.ORACLEDB_SECRET }}
            -p BCREGISTRY_KEY='${{ secrets.BCREGISTRY_KEY }}'
            -p BCREGISTRY_ACCOUNT='${{ secrets.BCREGISTRY_ACCOUNT }}'
            -p CHES_CLIENT_ID=${{ secrets.CHES_CLIENT_ID }}
            -p CHES_CLIENT_SECRET=${{ secrets.CHES_CLIENT_SECRET }}

  prod-deploy:
    name: PROD Deployment
    needs:
      - prod-init
    env:
      PREV: test
      ZONE: prod
      DOMAIN: apps.silver.devops.gov.bc.ca
    environment: prod
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Deploy Database
        uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: database/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: false
          penetration_test: false
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/database:${{ env.PREV }}

      - name: Deploy Backend
        uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: backend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          verification_path: health
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/backend:${{ env.PREV }}
            -p CHES_TOKEN_URL='https://loginproxy.gov.bc.ca/auth/realms/comsvcauth/protocol/openid-connect/token'
            -p CHES_API_URL='https://ches.api.gov.bc.ca/api/v1'
            -p BCREGISTRY_URI='https://bcregistry-prod.apigee.net'

      - name: Deploy Legacy
        uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: legacy/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          verification_path: health
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/legacy:${{ env.PREV }}

      - name: Deploy Processor
        uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: processor/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          verification_path: health
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/processor:${{ env.PREV }}

      - name: Deploy Frontend
        uses: bcgov-nr/action-deployer-openshift@v1.0.2
        with:
          file: frontend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          penetration_test: false
          parameters:
            -p ZONE=${{ env.ZONE }} -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/frontend:${{ env.PREV }}
            -p VITE_KEYCLOAK_URL=https://loginproxy.gov.bc.ca/auth
            -p VITE_KEYCLOAK_CLIENT_ID=${{ secrets.KEYCLOAK_CLIENT_ID }}
