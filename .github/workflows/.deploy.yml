name: .Deploy

on:
  workflow_call:
    inputs:
      ### Required
      environment:
        description: Environment name; omit for PRs
        required: true
        type: string
      url_zone:
        description: URL zone
        required: true
        type: string

      ### Typical / recommended
      cognito_environment:
        description: Cognito environment
        default: DEV
        required: false
        type: string
      cognito_logout_uri:
        description: Cognito logout URI
        default: 'https://logontest7.gov.bc.ca/clp-cgi/logoff.cgi?retnow=1&returl=https://dev.loginproxy.gov.bc.ca/auth/realms/standard/protocol/openid-connect/logout?redirect_uri=https://${{ github.event.repository.name }}-${{ inputs.url_zone }}-frontend.apps.silver.devops.gov.bc.ca'
        required: false
        type: string
      cognito_redirect_uri:
        description: Cognito redirect URI
        default: 'https://logontest7.gov.bc.ca/clp-cgi/logoff.cgi?retnow=1&returl=https://dev.loginproxy.gov.bc.ca/auth/realms/standard/protocol/openid-connect/logout?redirect_uri=https://${{ github.event.repository.name }}-${{ inputs.url_zone }}-frontend.apps.silver.devops.gov.bc.ca'
        required: false
        type: string
      target:
        description: PR number, test or prod
        default: ${{ github.event.number }}
        required: false
        type: string
      vite_node_env:
        description: Vite node environment
        default: openshift-dev
        required: false
        type: string

jobs:
  deploy:
    name: Deploy
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Deploy Database Backup
        uses: bcgov-nr/action-deployer-openshift@v2.1.0
        with:
          file: database/openshift.backup.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          parameters:
            -p ZONE=${{ inputs.target }}
            -p PROMOTE=${{ github.repository }}/database:${{ inputs.target }}

      - name: Backup database before update
        continue-on-error: true
        run: |
          oc login --token=${{ secrets.OC_TOKEN }} --server=${{ secrets.OC_SERVER }}
          oc project ${{ secrets.OC_NAMESPACE }} # Safeguard!

          # Run a backup before deploying a new version
          oc create job --from=cronjob/${{ github.event.repository.name }}-${{ inputs.target }}-database-backup \
            ${{ github.event.repository.name }}-${{ inputs.target }}-database-backup-$(date +%Y%m%d%H%M%S)

      - name: Deploy Database
        uses: bcgov-nr/action-deployer-openshift@v2.1.0
        with:
          file: database/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: false
          parameters:
            -p ZONE=${{ inputs.target }}
            -p PROMOTE=${{ github.repository }}/database:${{ inputs.target }}
            -p ADDRESS_COMPLETE_KEY='${{ secrets.ADDRESS_COMPLETE_KEY }}'
            -p BCREGISTRY_ACCOUNT='${{ secrets.BCREGISTRY_ACCOUNT }}'
            -p BCREGISTRY_KEY='${{ secrets.BCREGISTRY_KEY }}'
            -p CHES_CLIENT_ID='${{ secrets.CHES_CLIENT_ID }}'
            -p CHES_CLIENT_SECRET='${{ secrets.CHES_CLIENT_SECRET }}'
            -p CHES_MAIL_COPY='${{ secrets.CHES_MAIL_COPY }}'
            -p COGNITO_CLIENT_ID='${{ secrets.COGNITO_CLIENT_ID }}'
            -p COGNITO_DOMAIN='${{ secrets.COGNITO_DOMAIN }}'
            -p COGNITO_ENVIRONMENT='${{ inputs.cognito_environment }}'
            -p COGNITO_LOGOUT_URI='${{ inputs.cognito_logout_uri }}'
            -p COGNITO_REDIRECT_URI='${{ inputs.cognito_redirect_uri }}'
            -p COGNITO_REGION='${{ secrets.COGNITO_REGION }}'
            -p COGNITO_USER_POOL='${{ secrets.COGNITO_USER_POOL }}'
            -p DB_PASSWORD='${{ secrets.DB_PASSWORD }}'
            -p ORACLEDB_DATABASE='${{ secrets.ORACLEDB_DATABASE }}'
            -p ORACLEDB_HOST='${{ secrets.ORACLEDB_HOST }}'
            -p ORACLEDB_PASSWORD='${{ secrets.ORACLEDB_PASSWORD }}'
            -p ORACLEDB_PASSWORD_W='${{ secrets.ORACLEDB_PASSWORD_W }}'
            -p ORACLEDB_SERVICENAME='${{ secrets.ORACLEDB_SERVICENAME }}'
            -p ORACLEDB_SECRET='${{ secrets.ORACLEDB_SECRET }}'
            -p ORACLEDB_USER='${{ secrets.ORACLEDB_USERNAME }}'
            -p ORACLEDB_USER_W='${{ secrets.ORACLEDB_USERNAME_W }}'

      - name: Deploy Backend
        uses: bcgov-nr/action-deployer-openshift@v2.1.0
        with:
          file: backend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          verification_path: health
          parameters:
            -p ZONE=${{ inputs.target }}
            -p PROMOTE=${{ github.repository }}/backend:${{ inputs.target }}
            -p CHES_TOKEN_URL='https://loginproxy.gov.bc.ca/auth/realms/comsvcauth/protocol/openid-connect/token'
            -p CHES_API_URL='https://ches.api.gov.bc.ca/api/v1/email'
            -p BCREGISTRY_URI='https://bcregistry-prod.apigee.net'
            -p URL_ZONE=${{ inputs.url_zone }}

      - name: Dev data replacement
        uses: bcgov-nr/action-deployer-openshift@v2.1.0
        with:
          file: database/openshift.dev.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          parameters: -p ZONE=${{ inputs.target }}

      - name: Deploy Legacy
        uses: bcgov-nr/action-deployer-openshift@v2.1.0
        with:
          file: legacy/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          verification_path: health
          parameters:
            -p ZONE=${{ inputs.target }}
            -p PROMOTE=${{ github.repository }}/legacy:${{ inputs.target }}
            -p URL_ZONE=${{ inputs.url_zone }}

      - name: Deploy Frontend
        uses: bcgov-nr/action-deployer-openshift@v2.1.0
        with:
          file: frontend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          parameters:
            -p ZONE=${{ inputs.target }}
            -p PROMOTE=${{ github.repository }}/frontend:${{ inputs.target }}
            -p VITE_NODE_ENV=${{ inputs.vite_node_env }}
            -p URL_ZONE=${{ inputs.url_zone }}
            -p GREEN_DOMAIN=${{ secrets.GREEN_DOMAIN }}
            -p COGNITO_REGION=${{ secrets.COGNITO_REGION }}
            -p COGNITO_CLIENT_ID=${{ secrets.COGNITO_CLIENT_ID }}
            -p COGNITO_USER_POOL=${{ secrets.COGNITO_USER_POOL }}
            -p COGNITO_DOMAIN=${{ secrets.COGNITO_DOMAIN }}
            -p COGNITO_ENVIRONMENT=${{ inputs.cognito_environment }}
            -p COGNITO_REDIRECT_URI=${{ inputs.cognito_redirect_uri }}
            -p COGNITO_LOGOUT_URI==${{ inputs.cognito_logout_uri }}

      - name: Deploy Processor
        uses: bcgov-nr/action-deployer-openshift@v2.1.0
        with:
          file: processor/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          verification_path: health
          parameters:
            -p ZONE=${{ inputs.target }}
            -p PROMOTE=${{ github.repository }}/processor:${{ inputs.target }}
            -p URL_ZONE=${{ inputs.url_zone }}
            -p BCREGISTRY_URI='https://bcregistry-prod.apigee.net'

  cypress-run:
    name: "User flow test"
    runs-on: ubuntu-22.04
    needs: [deploy]
    environment: dev
    env:
      DOMAIN: apps.silver.devops.gov.bc.ca
      PREFIX: ${{ github.event.repository.name }}-${{ inputs.url_zone }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        name: Start node
        with:
          node-version: 18

      - name: Run Cypress End-to-End
        uses: cypress-io/github-action@v5
        with:
          working-directory: cypress
        env:
          CYPRESS_baseUrl: https://${{ github.event.repository.name }}-${{ inputs.url_zone }}-frontend.apps.silver.devops.gov.bc.ca
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Cypress Results
        uses: mikepenz/action-junit-report@v4
        continue-on-error: true
        if: always()
        with:
          report_paths: cypress/result.xml
          commit: ${{ github.event.pull_request.head.sha }}
          summary: Cypress Test Results
          detailed_summary: true
          job_name: User Journeys

      - uses: actions/upload-artifact@v4
        name: Upload Cypress Screenshots with error
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/cypress/screenshots
          retention-days: 7

      - uses: actions/upload-artifact@v4
        name: Upload Cypress Videos with error
        if: failure()
        with:
          name: cypress-videos
          path: cypress/cypress/videos
          retention-days: 7
