name: .Deploys

on:
  workflow_call:
    inputs:
      ### Required
      # Nothing! Only `secrets: inherit` is required

      ### Typical / recommended
      environment:
        description: GitHub/OpenShift environment; usually PR number, test or prod
        default: 'dev'
        required: false
        type: string
      tag:
        description: Container tag; usually PR number
        default: ${{ github.event.number }}
        required: false
        type: string
      target:
        description: Deployment target; usually PR number, test or prod
        default: ${{ github.event.number }}
        required: false
        type: string

permissions: {}

jobs:
  init:
    name: Deploy (init)
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-24.04
    outputs:
      url: ${{ steps.set-url.outputs.url }}
    steps:
      # steps.set-url.outputs.url => needs.init.outputs.url
      - name: Set the deployment URL
        id: set-url
        run: |
          echo "url=${{ github.event.repository.name }}-$((${{ github.event.number }} % 50))-frontend.apps.silver.devops.gov.bc.ca" >> $GITHUB_OUTPUT
          echo "url=${{ github.event.repository.name }}-$((${{ github.event.number }} % 50))-frontend.apps.silver.devops.gov.bc.ca"

      - name: Deployment Init
        uses: bcgov/action-deployer-openshift@v4.0.0
        with:
          file: common/openshift.init.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.oc_server }}
          oc_token: ${{ secrets.oc_token }}
          overwrite: true
          parameters:
            -p ZONE=${{ inputs.target }}
            -p ORACLEDB_USER=${{ secrets.ORACLEDB_USERNAME }}
            -p ORACLEDB_PASSWORD=${{ secrets.ORACLEDB_PASSWORD }}
            -p ORACLEDB_USER_W=THE
            -p ORACLEDB_PASSWORD_W=${{ secrets.ORACLEDB_PASSWORD_W }}_${{ github.event.number }}
            -p ORACLEDB_DATABASE=${{ secrets.ORACLEDB_DATABASE }}
            -p ORACLEDB_HOST="nr-forest-client-tools-legacydb.d2723f-tools.svc.cluster.local"
            -p ORACLEDB_SERVICENAME=PR_${{ github.event.number }}
            -p ORACLEDB_SECRET=${{ secrets.ORACLEDB_SECRET }}
            -p BCREGISTRY_KEY=${{ secrets.BCREGISTRY_KEY }}
            -p BCREGISTRY_ACCOUNT=${{ secrets.BCREGISTRY_ACCOUNT }}
            -p CHES_CLIENT_ID=${{ secrets.CHES_CLIENT_ID }}
            -p CHES_CLIENT_SECRET=${{ secrets.CHES_CLIENT_SECRET }}
            -p ADDRESS_COMPLETE_KEY=${{ secrets.ADDRESS_COMPLETE_KEY }}
            -p COGNITO_ENVIRONMENT=DEV
            -p CHES_MAIL_COPY=${{ secrets.CHES_MAIL_COPY }}
            -p VITE_NODE_ENV=openshift-dev
            -p URL_FRONTEND=${{ steps.set-url.outputs.url }}
            -p GREEN_DOMAIN=${{ secrets.GREEN_DOMAIN }}
            -p COGNITO_CLIENT_ID=${{ secrets.COGNITO_CLIENT_ID }}
            -p COGNITO_DOMAIN=${{ secrets.COGNITO_DOMAIN }}
            -p COGNITO_REGION=${{ secrets.COGNITO_REGION }}
            -p COGNITO_USER_POOL=${{ secrets.COGNITO_USER_POOL }}
            -p LANDING_URL=${{ steps.set-url.outputs.url }}
            -p DB_PASSWORD="$(echo ${{github.ref}}${{github.event.number}}|md5sum|cut -d' ' -f1)"

      - name: Backup database before update
        continue-on-error: true
        if: github.event_name != 'pull_request'
        uses: bcgov/action-oc-runner@v1.0.0
        with:
          oc_namespace: ${{ secrets.oc_namespace }}
          oc_token: ${{ secrets.oc_token }}
          oc_server: ${{ secrets.oc_server }}
          cronjob: ${{ github.event.repository.name }}-${{ github.event.number }}-database-backup

  deploy:
    name: Deploy
    needs: [init]
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    strategy:
      matrix:
        name: [database, database-bk, legacy, processor, backend, backend-cm, database-dev, frontend, frontend-cm]
        include:
          - name: database
            file: database/openshift.deploy.yml
            overwrite: false
            parameters: -p TAG=${{ inputs.tag }}
          - name: database-bk
            file: database/openshift.backup.yml
            parameters: -p TAG=${{ inputs.tag }}
          - name: legacy
            file: legacy/openshift.deploy.yml
            parameters:
              -p TAG=${{ inputs.tag }}
              -p ENVIRONMENT=d2723f-dev
              -p ORACLEDB_PORT=1521
          - name: processor
            file: processor/openshift.deploy.yml
            parameters:
              -p TAG=${{ inputs.tag }}
              -p BCREGISTRY_URI='https://bcregistry-prod.apigee.net'
          - name: backend
            file: backend/openshift.deploy.yml
            parameters:
              -p TAG=${{ inputs.tag }}
              -p CHES_TOKEN_URL='https://loginproxy.gov.bc.ca/auth/realms/comsvcauth/protocol/openid-connect/token'
              -p CHES_API_URL='https://ches.api.gov.bc.ca/api/v1'
              -p BCREGISTRY_URI='https://bcregistry-prod.apigee.net'
              -p COGNITO_REGION=ca-central-1
              -p FRONTEND_URL=${{ needs.init.outputs.url }}
          - name: backend-cm
            file: backend/openshift.configmap.dev.yml
          - name: database-dev
            file: database/openshift.dev.yml
          - name: frontend
            file: frontend/openshift.deploy.yml
            parameters:
              -p TAG=${{ inputs.tag }}
              -p URL=${{ needs.init.outputs.url }}
          - name: frontend-cm
            file: frontend/openshift.configmap.dev.yml
    steps:
      - uses: bcgov/action-deployer-openshift@v4.0.0
        id: deploys
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ secrets.oc_namespace }}
          oc_server: ${{ secrets.oc_server }}
          oc_token: ${{ secrets.oc_token }}
          overwrite: ${{ matrix.overwrite }}
          parameters:
            -p ZONE=${{ inputs.target }}
            ${{ matrix.parameters }}
