name: Pull Request Open

on:
  pull_request:

concurrency:
  # PR open and close use the same group, allowing only one at a time
  group: pr-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  vars:
    name: Variables
    runs-on: ubuntu-24.04
    outputs:
      url: ${{ steps.calculate.outputs.url }}
    steps:
      # steps.calculate.outputs.url => needs.vars.outputs.url
      - name: Calculate the deployment number
        id: calculate
        run: |
          echo "url=${{ github.event.repository.name }}-$((${{ github.event.number }} % 50))-frontend.apps.silver.devops.gov.bc.ca" >> $GITHUB_OUTPUT
          echo "url=${{ github.event.repository.name }}-$((${{ github.event.number }} % 50))-frontend.apps.silver.devops.gov.bc.ca"

  builds:
    name: Builds
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [backend, database, frontend, legacy, processor]
    steps:
      - uses: bcgov/action-builder-ghcr@v2.3.0
        name: Build (${{ matrix.package }})
        with:
          package: ${{ matrix.package }}
          tag: ${{ github.event.number }}
          tag_fallback: latest
          triggers: ('${{ matrix.package }}/')
          build_args: |
            APP_VERSION=${{ github.event.number }}

  deploy:
    name: Deploy Application
    needs: [builds, vars]
    environment: dev
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Initializing Deployment
        uses: bcgov/action-deployer-openshift@v4.0.0
        with:
          file: common/openshift.init.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          oc_version: "4.13"
          overwrite: true
          parameters:
            -p ZONE=${{ github.event.number }}
            -p ORACLEDB_USER=${{ secrets.ORACLEDB_USERNAME }}
            -p ORACLEDB_PASSWORD=${{ secrets.ORACLEDB_PASSWORD }}
            -p ORACLEDB_USER_W=THE
            -p ORACLEDB_PASSWORD_W=${{ secrets.ORACLEDB_PASSWORD_W }}_${{ github.event.number }}
            -p ORACLEDB_DATABASE=${{ secrets.ORACLEDB_DATABASE }}
            -p ORACLEDB_HOST="nr-forest-client-tools-legacydb.d2723f-tools.svc.cluster.local"
            -p ORACLEDB_SERVICENAME=PR_${{ github.event.number }}
            -p ORACLEDB_SECRET=${{ secrets.ORACLEDB_SECRET }}
            -p BCREGISTRY_KEY=${{ secrets.BCREGISTRY_KEY }}
            -p BCREGISTRY_ACCOUNT=${{ secrets.BCREGISTRY_ACCOUNT }}
            -p CHES_CLIENT_ID=${{ secrets.CHES_CLIENT_ID }}
            -p CHES_CLIENT_SECRET=${{ secrets.CHES_CLIENT_SECRET }}
            -p ADDRESS_COMPLETE_KEY=${{ secrets.ADDRESS_COMPLETE_KEY }}
            -p DB_PASSWORD=$(echo ${{github.ref}}${{github.event.number}}|md5sum|cut -d' ' -f1)
            -p COGNITO_USER_POOL=${{ secrets.COGNITO_USER_POOL }}
            -p COGNITO_ENVIRONMENT=DEV
            -p CHES_MAIL_COPY=${{ secrets.CHES_MAIL_COPY }}

      - name: Deploy Database Backup
        uses: bcgov/action-deployer-openshift@v4.0.0
        with:
          file: database/openshift.backup.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          oc_version: "4.13"
          overwrite: true
          parameters:
            -p ZONE=${{ github.event.number }}
            -p TAG=${{ github.event.number }}

      - name: Backup database before update
        continue-on-error: true
        uses: bcgov/action-oc-runner@v1.0.0
        with:
          oc_namespace: ${{ secrets.oc_namespace }}
          oc_token: ${{ secrets.oc_token }}
          oc_server: ${{ secrets.oc_server }}
          cronjob: ${{ github.event.repository.name }}-${{ github.event.number }}-database-backup

      - name: Deploy Database
        uses: bcgov/action-deployer-openshift@v4.0.0
        with:
          file: database/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          oc_version: "4.13"
          overwrite: false
          parameters:
            -p ZONE=${{ github.event.number }}
            -p TAG=${{ github.event.number }}

      - name: Deploy Legacy
        uses: bcgov/action-deployer-openshift@v4.0.0
        with:
          file: legacy/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          oc_version: "4.13"
          overwrite: true
          parameters:
            -p ZONE=${{ github.event.number }}
            -p TAG=${{ github.event.number }}
            -p ENVIRONMENT=${{ secrets.OC_NAMESPACE }}
            -p ORACLEDB_PORT=1521

      - name: Deploy Processor
        uses: bcgov/action-deployer-openshift@v4.0.0
        with:
          file: processor/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          oc_version: "4.13"
          overwrite: true
          parameters:
            -p ZONE=${{ github.event.number }}
            -p TAG=${{ github.event.number }}
            -p BCREGISTRY_URI='https://bcregistry-prod.apigee.net'

      - name: Deploy Backend ConfigMap
        uses: bcgov/action-deployer-openshift@v4.0.0
        with:
          file: backend/openshift.configmap.dev.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          oc_version: "4.13"
          overwrite: true          
          parameters:
            -p ZONE=${{ github.event.number }}            

      - name: Deploy Backend
        uses: bcgov/action-deployer-openshift@v4.0.0
        with:
          file: backend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          oc_version: "4.13"
          overwrite: true
          parameters:
            -p ZONE=${{ github.event.number }}
            -p TAG=${{ github.event.number }}
            -p CHES_TOKEN_URL='https://loginproxy.gov.bc.ca/auth/realms/comsvcauth/protocol/openid-connect/token'
            -p CHES_API_URL='https://ches.api.gov.bc.ca/api/v1'
            -p BCREGISTRY_URI='https://bcregistry-prod.apigee.net'
            -p COGNITO_REGION=ca-central-1
            -p FRONTEND_URL=${{ needs.vars.outputs.url }}

      - name: Dev data replacement
        uses: bcgov/action-deployer-openshift@v4.0.0
        with:
          file: database/openshift.dev.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          oc_version: "4.13"
          overwrite: true
          parameters: -p ZONE=${{ github.event.number }}

      - name: Deploy Frontend ConfigMap
        uses: bcgov/action-deployer-openshift@v4.0.0
        with:
          file: frontend/openshift.configmap.dev.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          oc_version: "4.13"
          overwrite: true          
          parameters:
            -p ZONE=${{ github.event.number }}  

      - name: Deploy Frontend
        uses: bcgov/action-deployer-openshift@v4.0.0
        with:
          file: frontend/openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          oc_version: "4.13"
          overwrite: true
          parameters:
            -p ZONE=${{ github.event.number }}
            -p TAG=${{ github.event.number }}
            -p VITE_NODE_ENV=openshift-dev
            -p URL=${{ needs.vars.outputs.url }}
            -p GREEN_DOMAIN=${{ secrets.GREEN_DOMAIN }}
            -p COGNITO_REGION=${{ secrets.COGNITO_REGION }}
            -p COGNITO_CLIENT_ID=${{ secrets.COGNITO_CLIENT_ID }}
            -p COGNITO_USER_POOL=${{ secrets.COGNITO_USER_POOL }}
            -p COGNITO_DOMAIN=${{ secrets.COGNITO_DOMAIN }}
            -p COGNITO_ENVIRONMENT=DEV
            -p LANDING_URL=${{ needs.vars.outputs.url }}

  tests:
    name: Tests
    needs: [deploy, vars]
    uses: ./.github/workflows/.automated-tests.yml
    secrets: inherit
    with:
      url: ${{ needs.vars.outputs.url }}

  results:
    name: PR Results
    needs: [builds, deploy, tests]
    if: always()
    runs-on: ubuntu-24.04
    steps:
      - if: contains(needs.*.result, 'failure')||contains(needs.*.result, 'canceled')
        run: echo "At least one job has failed." && exit 1
      - run: echo "Success!"
