name: Unit Tests and Analysis

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changedfiles:
    runs-on: ubuntu-latest  
    outputs:
      backend: ${{ steps.changes.outputs.backend}}
      frontend: ${{ steps.changes.outputs.frontend}}
      database: ${{ steps.changes.outputs.database}}
      documentation: ${{ steps.changes.outputs.documentation}}
    steps:        
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Get changed files
        id: changes        
        run: |
          echo "::set-output name=backend::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep backend | xargs)"
          echo "::set-output name=frontend::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep frontend | xargs)"
          echo "::set-output name=database::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep database | xargs)"
          echo "::set-output name=documentation::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep docs/ | xargs)"

  tests-backend:
    name: Backend Unit Tests
    needs: changedfiles
    if: ${{needs.changedfiles.outputs.backend}} && (github.event_name != 'pull_request' || !github.event.pull_request.draft)
    runs-on: ubuntu-22.04
    steps:
      - uses: bcgov-nr/action-test-and-analyse-java@v0.1.0
        with:
          commands: |
            ./mvnw test
          dir: backend
          java-cache: maven
          java-distribution: temurin
          java-version: "17"
          sonar_args: >
            -Dsonar.exclusions=**/coverage/**
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.projectKey=forest-client-backend
          sonar_project_token: ${{ secrets.SONAR_TOKEN_BACKEND }}

  tests-frontend:
    name: Frontend Unit Tests
    needs: changedfiles
    if: ${{needs.changedfiles.outputs.frontend}} && (github.event_name != 'pull_request' || !github.event.pull_request.draft)
    runs-on: ubuntu-22.04
    steps:
      - uses: bcgov-nr/action-test-and-analyse@v0.0.1
        with:
          commands: |
            npm ci
            npm run test
          dir: frontend
          sonar_args: >
            -Dsonar.exclusions=**/coverage/**,**/examples/**
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.projectKey=forest-client-frontend
          sonar_project_token: ${{ secrets.SONAR_TOKEN_FRONTEND }}

  # https://github.com/marketplace/actions/aqua-security-trivy
  trivy:
    name: Repository Report
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.8.0
        with:
          scan-type: "fs"
          format: "sarif"
          output: "trivy-results.sarif"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"
          security-checks: "vuln,secret,config"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"
