name: Backend Continuous Integration
on:
  push:
    branches:
      - '*'
      - '*/*'
      - '**'
    tags-ignore:
      - '**'
    paths:
      - "backend/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:  

  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache Maven
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-test-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-test-

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Code Validation
        run: mvn -B validate --file pom.xml

      - name: Archive CycloneDX
        uses: actions/upload-artifact@v2
        with:
          name: cyclone
          path: target/bom.json
          retention-days: 5

      - name: Code Compilation
        run: mvn -B clean compile --file pom.xml

      - name: Checkstyle
        run: mvn -B checkstyle:checkstyle -Dcheckstyle.skip=false --file pom.xml

      - name: Use Checkstyle report
        uses: jwgmeligmeyling/checkstyle-github-action@master
        with:
          path: '**/checkstyle-result.xml'

  test:
    name: Test Code
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    needs:
      - validate
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache Maven
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-test-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-test-

      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Unit Tests
        run: mvn -B test --file pom.xml

      - name: Integration Tests
        run: mvn -B verify -P integration-test --file pom.xml

      - name: Code Coverage
        run: mvn -B clean verify -P all-tests --file pom.xml

      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.3
        with:
          paths: target/coverage-reports/merged-test-report/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 70
          min-coverage-changed-files: 70

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: 'target/**/TEST-*.xml'

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: target/coverage-reports/merged-test-report/jacoco.csv

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Commit the badge (if it changed)
        run: |
          if [[ `git status --porcelain` ]]; then
            git config --global user.name 'CI Bot'
            git config --global user.email 'cibot@users.noreply.github.com'
            git add -A
            git commit -m "ci: autogenerated JaCoCo coverage badge"
            git push
          fi

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/coverage-reports/merged-test-report/

      - name: Qualitygate
        run: mvn -B clean verify -P all-tests package sonar:sonar -Dsonar.projectKey=paulushcgcj_simple-webflux -Dsonar.coverage.jacoco.xmlReportPaths=target/coverage-reports/merged-test-report/jacoco.xml --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  security:
    name: Security checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    permissions:
      security-events: write
    needs:
      - validate
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache Maven
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-test-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-test-

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Code Compilation
        run: mvn -B clean compile --file pom.xml

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --sarif-file-output=snyk.sarif

  vulnerability:
    name: Vulnerability checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    permissions:
      security-events: write
    needs:
      - validate
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache Maven
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-test-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-test-

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Code Compilation
        run: mvn -B clean compile --file pom.xml

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
