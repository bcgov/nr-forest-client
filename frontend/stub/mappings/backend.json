{
  "mappings": [
    {
      "name": "Autocomplete BC Registry",
      "request": {
        "urlPattern": "/api/clients/name/(.*)",
        "method": "GET"
      },
      "response": {
        "status": 200,
        "bodyFileName": "response-autocomplete.json",
        "transformers": [
          "response-template"
        ]
      }
    },
    {
      "name": "BC Registry Details OK",
      "request": {
        "urlPattern": "/api/clients/(XX|YY|UU|JJ|FM)(.*)",
        "method": "GET"
      },
      "response": {
        "status": 200,
        "bodyFileName": "response-details-{{regexExtract request.path.[2] '(XX|YY|UU|JJ|FM)(.*)' 'parts'}}{{parts.0}}.json",
        "transformers": [
          "response-template"
        ],
        "fixedDelayMilliseconds": 1000
      }
    },
    {
      "name": "BC Registry Details Duplicated",
      "request": {
        "urlPattern": "/api/clients/ZZ(.*)",
        "method": "GET"
      },
      "response": {
        "status": 409,
        "body": "The Edgar Paciolli already exists with the registration number {{request.path.[2]}} and client number 999999",
        "transformers": [
          "response-template"
        ]
      }
    },
    {
      "name": "BC Registry Details Non Person",
      "request": {
        "url": "/api/clients/FM7654321",
        "method": "GET"
      },
      "response": {
        "status": 422,
        "body": "Unable to process request. This sole proprietor is not owner by a person",
        "transformers": [
          "response-template"
        ]
      }
    },
    {
      "name": "BC Registry Details Unsupported Client Type",
      "request": {
        "url": "/api/clients/BC1234567",
        "method": "GET"
      },
      "response": {
        "status": 406,
        "body": "Client type BC is not supported at the moment",
        "transformers": [
          "response-template"
        ]
      }
    },
    {
      "name": "District Codes",
      "request": {
        "url": "/api/districts?page=0&size=250",
        "method": "GET"
      },
      "response": {
        "status": 200,
        "bodyFileName": "response-districts.json"
      }
    },
    {
      "name": "Country Codes",
      "request": {
        "url": "/api/countries?page=0&size=250",
        "method": "GET"
      },
      "response": {
        "status": 200,
        "bodyFileName": "response-countries.json"
      }
    },
    {
      "name": "District Codes",
      "request": {
        "url": "/api/districts?page=0&size=250",
        "method": "GET"
      },
      "response": {
        "status": 200,
        "bodyFileName": "response-districts.json"
      }
    },
    {
      "name": "Province Codes",
      "request": {
        "urlPattern": "/api/countries/(.*)/provinces?page=0&size=250",
        "method": "GET"
      },
      "response": {
        "status": 200,
        "transformers": [
          "response-template"
        ],
        "bodyFileName": "response-provinces-{{request.path.[2]}}.json"
      }
    },
    {
      "name": "Contact Type Codes",
      "request": {
        "url": "/api/codes/contactTypes?page=0&size=250",
        "method": "GET"
      },
      "response": {
        "status": 200,
        "body": "[{\"code\":\"P\",\"name\":\"Person\"}]"
      }
    },
    {
      "name": "Get Country by CountryCode",
      "request": {
        "urlPattern": "/api/countries/(.*)",
        "method": "GET"
      },
      "response": {
        "status": 200,
        "transformers": [
          "response-template"
        ],
        "bodyFileName": "response-getCountryByCode-{{request.path.[2]}}.json"
      }
    },
    {
      "name": "Get ClientType by Code",
      "request": {
        "urlPattern": "/api/codes/clientTypes/(.*)",
        "method": "GET"
      },
      "response": {
        "status": 200,
        "transformers": [
          "response-template"
        ],
        "transformerParameters": {
          "clientTypeMapping": {
            "A": "Association",
            "B": "First Nation Band",
            "C": "Corporation",
            "F": "Ministry of Forests and Range",
            "G": "Government",
            "I": "Individual",
            "L": "Limited Partnership",
            "P": "General Partnership",
            "R": "First Nation Group",
            "S": "Society",
            "T": "First Nation Tribal Council",
            "U": "Unregistered Company",
            "USP": "Unregistered sole proprietorship",
            "RSP": "Registered sole proprietorship"
          }
        },
        "jsonBody": {
          "code": "{{#assign 'code'}}{{request.pathSegments.[3]}}{{/assign}}{{code}}",
          "name": "{{lookup parameters.clientTypeMapping code}}"
        }
      }
    },
    {
      "name": "Submission Success for XX",
      "request": {
        "url": "/api/clients/submissions",
        "method": "POST",
        "bodyPatterns": [
          {
            "matchesJsonPath": {
              "expression": "$.businessInformation.registrationNumber",
              "contains": "XX"
            }
          }
        ]
      },
      "response": {
        "status": 201,
        "headers": {
          "Location": "/api/clients/123456",
          "x-sub-id": "123456"
        }
      }
    },
    {
      "name": "Submission Error for UU",
      "request": {
        "url": "/api/clients/submissions",
        "method": "POST",
        "bodyPatterns": [
          {
            "matchesJsonPath": {
              "expression": "$.businessInformation.registrationNumber",
              "contains": "UU"
            }
          }
        ]
      },
      "response": {
        "status": 400,
        "bodyFileName": "response-submission-fault.json"
      }
    },
    {
      "name": "Send email for ZZ",
      "request": {
        "url": "/api/ches/duplicate",
        "method": "POST",
        "bodyPatterns": [
          {
            "matchesJsonPath": {
              "expression": "$.registrationNumber",
              "contains": "ZZ"
            }
          }
        ]
      },
      "response": {
        "status": 202
      }
    },
    {
      "name": "Submission Error for FM1234567",
      "request": {
        "url": "/api/clients/submissions",
        "method": "POST",
        "bodyPatterns": [
          {
            "matchesJsonPath": {
              "expression": "$.businessInformation.registrationNumber",
              "contains": "FM1234567"
            }
          }
        ]
      },
      "response": {
        "status": 400,
        "body": "[{\"fieldId\":\"businessInformation.clientType\",\"errorMsg\":\"clientType value I is not supported for registered businesses\"}]"
      }
    },
    {
      "name": "Submission for Unregistered",
      "request": {
        "url": "/api/clients/submissions",
        "method": "POST",
        "bodyPatterns": [
          {
            "matchesJsonPath": {
              "expression": "$.businessInformation.businessType",
              "contains": "U"
            }
          },
          {
            "matchesJsonPath": {
              "expression": "$.businessInformation.clientType",
              "contains": "U"
            }
          }
        ]
      },
      "response": {
        "status": 201
      }
    },
    {
      "name": "Autocompete Canada Post Canada",
      "request": {
        "urlPath": "/api/addresses",
        "method": "GET",
        "queryParameters": {
          "country": {
            "equalTo": "CA"
          },
          "maxSuggestions": {
            "equalTo": "10"
          },
          "searchTerm": {
            "matches": ".*"
          }
        }
      },
      "response": {
        "status": 200,
        "bodyFileName": "response-address-search-CA.json"
      }
    },
    {
      "name": "Autocompete Canada Post US",
      "request": {
        "urlPath": "/api/addresses",
        "method": "GET",
        "queryParameters": {
          "country": {
            "equalTo": "US"
          },
          "maxSuggestions": {
            "equalTo": "10"
          },
          "searchTerm": {
            "matches": ".*"
          }
        }
      },
      "response": {
        "status": 200,
        "bodyFileName": "response-address-search-US.json"
      }
    },
    {
      "name": "Canada Post details for success",
      "request": {
        "urlPattern": "/api/addresses/(.*)",
        "method": "GET"
      },
      "response": {
        "status": 200,
        "bodyFileName": "response-address-{{request.path.[2]}}.json",
        "transformers": [
          "response-template"
        ],
        "fixedDelayMilliseconds": 2500
      }
    },
    {
      "name": "Canada Post error details for F8F8F8",
      "request": {
        "url": "/api/addresses/F8F8F8",
        "method": "GET"
      },
      "response": {
        "status": 404,
        "transformers": [
          "response-template"
        ],
        "fixedDelayMilliseconds": 2500
      }
    },
    {
      "name": "Submission List Page",
      "request": {
        "urlPath": "/api/clients/submissions",
        "method": "GET",
        "queryParameters": {
          "page": {
            "matches": "^[0-5]$"
          },
          "size": {
            "matches": "^\\d+$"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "x-total-count": "57",
          "content-type": "application/json;charset=UTF-8",
          "Access-Control-Expose-Headers": "x-total-count"
        },
        "bodyFileName": "response-submissions-page{{request.query.page}}.json",
        "transformers": [
          "response-template"
        ],
        "fixedDelayMilliseconds": 2500
      }
    },
    {
      "name": "Submission List Empty",
      "request": {
        "urlPath": "/api/clients/submissions",
        "method": "GET",
        "queryParameters": {
          "page": {
            "matches": "^[6-9]\\d*$"
          },
          "size": {
            "matches": "^\\d+$"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "x-total-count": "57",
          "content-type": "application/json;charset=UTF-8",
          "Access-Control-Expose-Headers": "x-total-count"
        },
        "body": "[]",
        "transformers": [
          "response-template"
        ]
      }
    },
    {
      "name": "Submission List Search",
      "request": {
        "urlPath": "/api/clients/submissions",
        "method": "GET",
        "queryParameters": {
          "page": {
            "matches": "^\\d+$"
          },
          "size": {
            "matches": "^\\d+$"
          },
          "keyword": {
            "matches": "^(.*)$"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "x-total-count": "3",
          "content-type": "application/json;charset=UTF-8",
          "Access-Control-Expose-Headers": "x-total-count"
        },
        "bodyFileName": "response-submissions-search.json",
        "transformers": [
          "response-template"
        ]
      }
    },
    {
      "name": "Submission Details Review",
      "request": {
        "urlPattern": "/api/clients/submissions/(.*)",
        "method": "GET"
      },
      "response": {
        "status": 200,
        "bodyFileName": "response-submissions-details-review.json",
        "transformers": [
          "response-template"
        ]
      }
    },
    {
      "name": "Submission Details Approved",
      "request": {
        "urlPath": "/api/clients/submissions/a17d274f-3f5f-425b-b94e-757fea4dcfbb",
        "method": "GET"
      },
      "response": {
        "status": 200,
        "bodyFileName": "response-submissions-details-approved.json",
        "transformers": [
          "response-template"
        ]
      }
    },
    {
      "name": "Submission Details Review Dupped",
      "request": {
        "urlPath": "/api/clients/submissions/5f1f7209-fb2f-487d-9619-786c63a52a07",
        "method": "GET"
      },
      "response": {
        "status": 200,
        "bodyFileName": "response-submissions-details-dupped.json",
        "transformers": [
          "response-template"
        ]
      }
    },
    {
      "name": "Submission Details Review Approved",
      "request": {
        "urlPath": "/api/clients/submissions/e14ad3a8-c7a1-4bd4-8cdf-8a6e9e013888",
        "method": "GET"
      },
      "response": {
        "status": 200,
        "bodyFileName": "response-submissions-details-reviewedapproved.json",
        "transformers": [
          "response-template"
        ]
      }
    },
    {
      "name": "Submission Details Review Unregistered",
      "request": {
        "urlPath": "/api/clients/submissions/9ceca504-f014-44f9-8a62-24e9b4311865",
        "method": "GET"
      },
      "response": {
        "status": 200,
        "bodyFileName": "response-submissions-details-unregistered.json",
        "transformers": [
          "response-template"
        ]
      }
    },
    {
      "name": "Submission processed successfully",
      "request": {
        "urlPattern": "/api/clients/submissions/(.*)",
        "method": "POST",
        "headers": {
          "x-user-id": {
            "equalTo": "uattest"
          },
          "x-user-email": {
            "equalTo": "uattest@gov.bc.ca"
          },
          "x-user-name": {
            "equalTo": "Uat Test"
          }
        }
      },
      "response": {
        "status": 202
      }
    },
    {
      "name": "Individual Match for BCSC",
      "request": {
        "urlPath": "/api/clients/individual/NA5TCPGMIGUFVCSS6SAO3TIDBMAHXL3F",
        "method": "GET",
        "headers": {
          "x-user-id": {
            "equalTo": "bcsc\\NA5TCPGMIGUFVCSS6SAO3TIDBMAHXL3F"
          },
          "x-user-email": {
            "equalTo": "jbaxter@gov.bc.ca"
          },
          "x-user-name": {
            "equalTo": "James Baxter"
          },
          "x-user-businessid": {
            "equalTo": ""
          }
        },
        "queryParameters": {
          "lastName": {
            "equalTo": "Baxter"
          }
        }
      },
      "response": {
        "status": 409,
        "body": "Client already exists with the client number 00000002"
      }
    },
    {
      "name": "No Individual Match for IDIR",
      "request": {
        "urlPath": "/api/clients/individual/JRYAN",
        "method": "GET",
        "queryParameters": {
          "lastName": {
            "equalTo": "Ryan"
          }
        }
      },
      "response": {
        "status": 409,
        "body": "Client already exists with the client number 00000002"
      }
    },
    {
      "name": "No Individual Match for BCeID",
      "request": {
        "urlPath": "/api/clients/individual/uattest",
        "method": "GET",
        "headers": {
          "x-user-id": {
            "equalTo": "bceidbusiness\\uattest"
          },
          "x-user-email": {
            "equalTo": "uattest@gov.bc.ca"
          },
          "x-user-name": {
            "equalTo": "Uat Test"
          },
          "x-user-businessid": {
            "equalTo": "automationinc"
          }
        },
        "queryParameters": {
          "lastName": {
            "equalTo": "Test"
          }
        }
      },
      "response": {
        "status": 200
      }
    }
  ]
}
